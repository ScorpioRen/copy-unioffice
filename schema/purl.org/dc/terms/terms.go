//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package terms ;import (_e "encoding/xml";_d "fmt";_c "github.com/ScorpioRen/copy-unioffice";_cd "github.com/ScorpioRen/copy-unioffice/schema/purl.org/dc/elements";);type RFC1766 struct{};

// ValidateWithPath validates the Box and its children, prefixing error messages with path
func (_eg *Box )ValidateWithPath (path string )error {return nil };func (_fc *ElementsAndRefinementsGroup )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_ead :for {_ag ,_bfd :=d .Token ();if _bfd !=nil {return _bfd ;};switch _fee :=_ag .(type ){case _e .StartElement :switch _fee .Name {case _e .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_gdc :=NewElementsAndRefinementsGroupChoice ();if _age :=d .DecodeElement (&_gdc .Any ,&_fee );_age !=nil {return _age ;};_fc .Choice =append (_fc .Choice ,_gdc );default:_c .Log ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006ce\u006d\u0065\u006e\u0074\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0020\u0025\u0076",_fee .Name );if _gbg :=d .Skip ();_gbg !=nil {return _gbg ;};};case _e .EndElement :break _ead ;case _e .CharData :};};return nil ;};func (_fde *TGN )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_cfab ,_gdad :=d .Token ();if _gdad !=nil {return _d .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0054\u0047\u004e\u003a\u0020\u0025\u0073",_gdad );};if _dcg ,_ccc :=_cfab .(_e .EndElement );_ccc &&_dcg .Name ==start .Name {break ;};};return nil ;};

// Validate validates the Point and its children
func (_de *Point )Validate ()error {return _de .ValidateWithPath ("\u0050\u006f\u0069n\u0074")};type LCC struct{};func (_cb *ISO639_2 )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};

// Validate validates the DCMIType and its children
func (_gd *DCMIType )Validate ()error {return _gd .ValidateWithPath ("\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065");};func (_fg *DDC )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0044\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_cc *RFC1766 )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_feg ,_da :=d .Token ();if _da !=nil {return _d .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0031\u0037\u0036\u0036\u003a\u0020\u0025\u0073",_da );};if _bab ,_gab :=_feg .(_e .EndElement );_gab &&_bab .Name ==start .Name {break ;};};return nil ;};func (_ba *IMT )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_ged ,_dce :=d .Token ();if _dce !=nil {return _d .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0049\u004d\u0054\u003a\u0020\u0025\u0073",_dce );};if _dgf ,_dcf :=_ged .(_e .EndElement );_dcf &&_dgf .Name ==start .Name {break ;};};return nil ;};func (_dc *DDC )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_ea ,_afb :=d .Token ();if _afb !=nil {return _d .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0044\u0044\u0043\u003a\u0020\u0025\u0073",_afb );};if _gcg ,_dd :=_ea .(_e .EndElement );_dd &&_gcg .Name ==start .Name {break ;};};return nil ;};func NewElementsAndRefinementsGroupChoice ()*ElementsAndRefinementsGroupChoice {_aeb :=&ElementsAndRefinementsGroupChoice {};return _aeb ;};

// Validate validates the ISO3166 and its children
func (_ga *ISO3166 )Validate ()error {return _ga .ValidateWithPath ("\u0049S\u004f\u0033\u0031\u0036\u0036");};type Period struct{};func (_f *Box )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0042\u006f\u0078";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};

// Validate validates the MESH and its children
func (_egf *MESH )Validate ()error {return _egf .ValidateWithPath ("\u004d\u0045\u0053\u0048")};func (_ddb *ElementsAndRefinementsGroupChoice )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {if _ddb .Any !=nil {_dfc :=_e .StartElement {Name :_e .Name {Local :"\u0064\u0063\u003a\u0061\u006e\u0079"}};for _ ,_bec :=range _ddb .Any {e .EncodeElement (_bec ,_dfc );};};return nil ;};func NewIMT ()*IMT {_eadd :=&IMT {};return _eadd };func (_cdc *ISO3166 )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_bfc ,_edd :=d .Token ();if _edd !=nil {return _d .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0049\u0053\u004f\u0033\u0031\u0036\u0036\u003a\u0020\u0025\u0073",_edd );};if _cfe ,_efdg :=_bfc .(_e .EndElement );_efdg &&_cfe .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the DCMIType and its children, prefixing error messages with path
func (_egb *DCMIType )ValidateWithPath (path string )error {return nil };

// Validate validates the ElementsAndRefinementsGroup and its children
func (_cgd *ElementsAndRefinementsGroup )Validate ()error {return _cgd .ValidateWithPath ("E\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070");};

// ValidateWithPath validates the W3CDTF and its children, prefixing error messages with path
func (_dgg *W3CDTF )ValidateWithPath (path string )error {return nil };type RFC3066 struct{};func (_fae *Period )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_cec ,_baad :=d .Token ();if _baad !=nil {return _d .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0050e\u0072\u0069o\u0064\u003a\u0020\u0025\u0073",_baad );};if _acb ,_gea :=_cec .(_e .EndElement );_gea &&_acb .Name ==start .Name {break ;};};return nil ;};type W3CDTF struct{};

// Validate validates the URI and its children
func (_dba *URI )Validate ()error {return _dba .ValidateWithPath ("\u0055\u0052\u0049")};type Box struct{};func (_gbc *TGN )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0054\u0047\u004e";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_dgfe *LCSH )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u004c\u0043\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the Period and its children, prefixing error messages with path
func (_ddee *Period )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the TGN and its children, prefixing error messages with path
func (_eff *TGN )ValidateWithPath (path string )error {return nil };func (_eec *MESH )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u004d\u0045\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the ElementsAndRefinementsGroupChoice and its children, prefixing error messages with path
func (_edg *ElementsAndRefinementsGroupChoice )ValidateWithPath (path string )error {for _bff ,_gcd :=range _edg .Any {if _ce :=_gcd .ValidateWithPath (_d .Sprintf ("\u0025\u0073\u002f\u0041\u006e\u0079\u005b\u0025\u0064\u005d",path ,_bff ));_ce !=nil {return _ce ;};};return nil ;};func NewDCMIType ()*DCMIType {_aa :=&DCMIType {};return _aa };func NewDDC ()*DDC {_af :=&DDC {};return _af };func (_dbf *RFC1766 )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0052F\u0043\u0031\u0037\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_afbb *ElementsAndRefinementsGroupChoice )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_efd :for {_eeb ,_bg :=d .Token ();if _bg !=nil {return _bg ;};switch _fce :=_eeb .(type ){case _e .StartElement :switch _fce .Name {case _e .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_dg :=_cd .NewAny ();if _acc :=d .DecodeElement (_dg ,&_fce );_acc !=nil {return _acc ;};_afbb .Any =append (_afbb .Any ,_dg );default:_c .Log ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0041\u006ed\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006fu\u0070\u0043\u0068o\u0069\u0063\u0065\u0020\u0025\u0076",_fce .Name );if _aec :=d .Skip ();_aec !=nil {return _aec ;};};case _e .EndElement :break _efd ;case _e .CharData :};};return nil ;};func (_ebc *MESH )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_cef ,_edf :=d .Token ();if _edf !=nil {return _d .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004d\u0045\u0053\u0048\u003a\u0020\u0025\u0073",_edf );};if _ebb ,_gdaf :=_cef .(_e .EndElement );_gdaf &&_ebb .Name ==start .Name {break ;};};return nil ;};func (_eed *Point )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0050\u006f\u0069n\u0074";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_bag *LCSH )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_aga ,_bdc :=d .Token ();if _bdc !=nil {return _d .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004c\u0043\u0053\u0048\u003a\u0020\u0025\u0073",_bdc );};if _dcd ,_fef :=_aga .(_e .EndElement );_fef &&_dcd .Name ==start .Name {break ;};};return nil ;};func (_ggd *DCMIType )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_ed *ElementsAndRefinementsGroup )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {if _ed .Choice !=nil {for _ ,_gdf :=range _ed .Choice {_gdf .MarshalXML (e ,_e .StartElement {});};};return nil ;};

// Validate validates the LCSH and its children
func (_ega *LCSH )Validate ()error {return _ega .ValidateWithPath ("\u004c\u0043\u0053\u0048")};func NewW3CDTF ()*W3CDTF {_aae :=&W3CDTF {};return _aae };type ISO639_2 struct{};

// ValidateWithPath validates the IMT and its children, prefixing error messages with path
func (_ceg *IMT )ValidateWithPath (path string )error {return nil };

// Validate validates the Period and its children
func (_bc *Period )Validate ()error {return _bc .ValidateWithPath ("\u0050\u0065\u0072\u0069\u006f\u0064");};

// ValidateWithPath validates the UDC and its children, prefixing error messages with path
func (_gcge *UDC )ValidateWithPath (path string )error {return nil };type URI struct{};func (_fbd *RFC3066 )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0052F\u0043\u0033\u0030\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};

// Validate validates the TGN and its children
func (_eabd *TGN )Validate ()error {return _eabd .ValidateWithPath ("\u0054\u0047\u004e")};

// Validate validates the DDC and its children
func (_gga *DDC )Validate ()error {return _gga .ValidateWithPath ("\u0044\u0044\u0043")};type ElementsAndRefinementsGroup struct{Choice []*ElementsAndRefinementsGroupChoice ;};

// ValidateWithPath validates the LCSH and its children, prefixing error messages with path
func (_bbac *LCSH )ValidateWithPath (path string )error {return nil };func (_cgdd *W3CDTF )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0057\u0033\u0043\u0044\u0054\u0046";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_bbae *URI )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0055\u0052\u0049";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_fbfc *RFC3066 )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_dcfb ,_eaa :=d .Token ();if _eaa !=nil {return _d .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0033\u0030\u0036\u0036\u003a\u0020\u0025\u0073",_eaa );};if _ddf ,_bga :=_dcfb .(_e .EndElement );_bga &&_ddf .Name ==start .Name {break ;};};return nil ;};func (_cgf *Period )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0050\u0065\u0072\u0069\u006f\u0064";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};

// Validate validates the W3CDTF and its children
func (_bgac *W3CDTF )Validate ()error {return _bgac .ValidateWithPath ("\u0057\u0033\u0043\u0044\u0054\u0046");};

// Validate validates the LCC and its children
func (_fbf *LCC )Validate ()error {return _fbf .ValidateWithPath ("\u004c\u0043\u0043")};func (_beg *W3CDTF )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_fea ,_fdaa :=d .Token ();if _fdaa !=nil {return _d .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u00573\u0043\u0044T\u0046\u003a\u0020\u0025\u0073",_fdaa );};if _acf ,_aeg :=_fea .(_e .EndElement );_aeg &&_acf .Name ==start .Name {break ;};};return nil ;};func NewRFC1766 ()*RFC1766 {_fbb :=&RFC1766 {};return _fbb };func NewPoint ()*Point {_abd :=&Point {};return _abd };

// ValidateWithPath validates the RFC1766 and its children, prefixing error messages with path
func (_cdcg *RFC1766 )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the ElementsAndRefinementsGroup and its children, prefixing error messages with path
func (_bba *ElementsAndRefinementsGroup )ValidateWithPath (path string )error {for _ee ,_ef :=range _bba .Choice {if _fcg :=_ef .ValidateWithPath (_d .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_ee ));_fcg !=nil {return _fcg ;};};return nil ;};

// Validate validates the IMT and its children
func (_eeg *IMT )Validate ()error {return _eeg .ValidateWithPath ("\u0049\u004d\u0054")};func (_ggf *ElementOrRefinementContainer )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072";e .EncodeToken (start );if _ggf .Choice !=nil {for _ ,_fd :=range _ggf .Choice {_fd .MarshalXML (e ,_e .StartElement {});};};e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_edb *IMT )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0049\u004d\u0054";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the Point and its children, prefixing error messages with path
func (_fcec *Point )ValidateWithPath (path string )error {return nil };func NewElementOrRefinementContainer ()*ElementOrRefinementContainer {_fe :=&ElementOrRefinementContainer {};return _fe ;};func NewRFC3066 ()*RFC3066 {_def :=&RFC3066 {};return _def };func (_agf *UDC )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_fbc ,_effa :=d .Token ();if _effa !=nil {return _d .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0044\u0043\u003a\u0020\u0025\u0073",_effa );};if _faea ,_fca :=_fbc .(_e .EndElement );_fca &&_faea .Name ==start .Name {break ;};};return nil ;};

// Validate validates the RFC1766 and its children
func (_ff *RFC1766 )Validate ()error {return _ff .ValidateWithPath ("\u0052F\u0043\u0031\u0037\u0036\u0036");};type TGN struct{};func (_cdb *LCC )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_fda ,_ddg :=d .Token ();if _ddg !=nil {return _d .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u004c\u0043\u0043\u003a\u0020\u0025\u0073",_ddg );};if _eab ,_bd :=_fda .(_e .EndElement );_bd &&_eab .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the LCC and its children, prefixing error messages with path
func (_cbg *LCC )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the URI and its children, prefixing error messages with path
func (_afa *URI )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the MESH and its children, prefixing error messages with path
func (_dbb *MESH )ValidateWithPath (path string )error {return nil };func (_a *Box )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_gg ,_gc :=d .Token ();if _gc !=nil {return _d .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0042\u006f\u0078\u003a\u0020\u0025\u0073",_gc );};if _cdf ,_ac :=_gg .(_e .EndElement );_ac &&_cdf .Name ==start .Name {break ;};};return nil ;};func NewUDC ()*UDC {_ebg :=&UDC {};return _ebg };type DDC struct{};func (_faa *UDC )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0055\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func NewTGN ()*TGN {_bgf :=&TGN {};return _bgf };

// ValidateWithPath validates the DDC and its children, prefixing error messages with path
func (_ab *DDC )ValidateWithPath (path string )error {return nil };

// Validate validates the RFC3066 and its children
func (_cge *RFC3066 )Validate ()error {return _cge .ValidateWithPath ("\u0052F\u0043\u0033\u0030\u0036\u0036");};func (_fb *ISO3166 )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0049S\u004f\u0033\u0031\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};type UDC struct{};

// ValidateWithPath validates the RFC3066 and its children, prefixing error messages with path
func (_feb *RFC3066 )ValidateWithPath (path string )error {return nil };type Point struct{};func (_cfag *URI )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_ddc ,_dga :=d .Token ();if _dga !=nil {return _d .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0052\u0049\u003a\u0020\u0025\u0073",_dga );};if _dfdd ,_dgb :=_ddc .(_e .EndElement );_dgb &&_dfdd .Name ==start .Name {break ;};};return nil ;};func NewBox ()*Box {_eb :=&Box {};return _eb };func (_agc *LCC )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u004c\u0043\u0043";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};type ISO3166 struct{};

// ValidateWithPath validates the ElementOrRefinementContainer and its children, prefixing error messages with path
func (_acd *ElementOrRefinementContainer )ValidateWithPath (path string )error {for _ae ,_bf :=range _acd .Choice {if _dde :=_bf .ValidateWithPath (_d .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_ae ));_dde !=nil {return _dde ;};};return nil ;};

// Validate validates the Box and its children
func (_gb *Box )Validate ()error {return _gb .ValidateWithPath ("\u0042\u006f\u0078")};

// Validate validates the ElementsAndRefinementsGroupChoice and its children
func (_cabg *ElementsAndRefinementsGroupChoice )Validate ()error {return _cabg .ValidateWithPath ("\u0045\u006c\u0065\u006d\u0065\u006et\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0043h\u006f\u0069\u0063\u0065");};func (_bea *ISO639_2 )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_cbb ,_gac :=d .Token ();if _gac !=nil {return _d .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0049\u0053\u004f6\u0033\u0039\u005f\u0032: \u0025\u0073",_gac );};if _ad ,_ggfa :=_cbb .(_e .EndElement );_ggfa &&_ad .Name ==start .Name {break ;};};return nil ;};func NewPeriod ()*Period {_ddgc :=&Period {};return _ddgc };

// ValidateWithPath validates the ISO3166 and its children, prefixing error messages with path
func (_acg *ISO3166 )ValidateWithPath (path string )error {return nil };

// Validate validates the UDC and its children
func (_bagb *UDC )Validate ()error {return _bagb .ValidateWithPath ("\u0055\u0044\u0043")};func NewISO639_2 ()*ISO639_2 {_gbd :=&ISO639_2 {};return _gbd };func NewMESH ()*MESH {_dda :=&MESH {};return _dda };func (_cab *ElementOrRefinementContainer )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_cf :for {_gda ,_df :=d .Token ();if _df !=nil {return _df ;};switch _ace :=_gda .(type ){case _e .StartElement :switch _ace .Name {case _e .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_egd :=NewElementsAndRefinementsGroupChoice ();if _cfa :=d .DecodeElement (&_egd .Any ,&_ace );_cfa !=nil {return _cfa ;};_cab .Choice =append (_cab .Choice ,_egd );default:_c .Log ("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020E\u006c\u0065\u006d\u0065\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065n\u0074\u0043on\u0074\u0061\u0069n\u0065\u0072\u0020\u0025\u0076",_ace .Name );if _dfd :=d .Skip ();_dfd !=nil {return _dfd ;};};case _e .EndElement :break _cf ;case _e .CharData :};};return nil ;};

// Validate validates the ElementOrRefinementContainer and its children
func (_aac *ElementOrRefinementContainer )Validate ()error {return _aac .ValidateWithPath ("\u0045\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072");};type ElementsAndRefinementsGroupChoice struct{Any []*_cd .Any ;};type MESH struct{};type IMT struct{};type ElementOrRefinementContainer struct{Choice []*ElementsAndRefinementsGroupChoice ;};

// ValidateWithPath validates the ISO639_2 and its children, prefixing error messages with path
func (_bfa *ISO639_2 )ValidateWithPath (path string )error {return nil };func NewISO3166 ()*ISO3166 {_afd :=&ISO3166 {};return _afd };type LCSH struct{};func NewLCC ()*LCC {_caa :=&LCC {};return _caa };func (_ge *DCMIType )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_b ,_be :=d .Token ();if _be !=nil {return _d .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0044\u0043\u004dI\u0054\u0079\u0070\u0065: \u0025\u0073",_be );};if _ca ,_bb :=_b .(_e .EndElement );_bb &&_ca .Name ==start .Name {break ;};};return nil ;};func NewLCSH ()*LCSH {_efa :=&LCSH {};return _efa };

// Validate validates the ISO639_2 and its children
func (_baa *ISO639_2 )Validate ()error {return _baa .ValidateWithPath ("\u0049\u0053\u004f\u0036\u0033\u0039\u005f\u0032");};func NewElementsAndRefinementsGroup ()*ElementsAndRefinementsGroup {_fa :=&ElementsAndRefinementsGroup {};return _fa ;};func (_ggdg *Point )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_cege ,_ggfd :=d .Token ();if _ggfd !=nil {return _d .Errorf ("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0050\u006f\u0069\u006et\u003a\u0020\u0025\u0073",_ggfd );};if _gcgd ,_bca :=_cege .(_e .EndElement );_bca &&_gcgd .Name ==start .Name {break ;};};return nil ;};type DCMIType struct{};func NewURI ()*URI {_fcea :=&URI {};return _fcea };func init (){_c .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0053\u0048",NewLCSH );_c .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004d\u0045\u0053\u0048",NewMESH );_c .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0044\u0043",NewDDC );_c .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0043",NewLCC );_c .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0044\u0043",NewUDC );_c .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u0065\u0072\u0069\u006f\u0064",NewPeriod );_c .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0057\u0033\u0043\u0044\u0054\u0046",NewW3CDTF );_c .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065",NewDCMIType );_c .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u004d\u0054",NewIMT );_c .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0052\u0049",NewURI );_c .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032",NewISO639_2 );_c .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0031\u0037\u0036\u0036",NewRFC1766 );_c .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0033\u0030\u0036\u0036",NewRFC3066 );_c .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u006f\u0069n\u0074",NewPoint );_c .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049S\u004f\u0033\u0031\u0036\u0036",NewISO3166 );_c .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0042\u006f\u0078",NewBox );_c .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0054\u0047\u004e",NewTGN );_c .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072",NewElementOrRefinementContainer );_c .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","e\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070",NewElementsAndRefinementsGroup );};